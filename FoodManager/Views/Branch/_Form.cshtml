@model FoodManager.Models.Branch
@using FoodManager.Infrastructure.Enums
@using FoodManager.Infrastructure.Extensions
@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.Status)

<div class="form-group">
    @Html.LabelFor(m => m.Code, "Código", new { @class = "col-lg-2 control-label" })
    <div class="col-md-6 input-group required-field-block">
        <span class="input-group-addon"><i class="fa fa-barcode"></i></span>
        @Html.TextBoxFor(m => m.Code, new
        {
            @class = "form-control",
            data_role = "none",
            placeholder = "Código",
            id = "Code",
            name = "Code",
            maxlength = "30",
            Autocomplete = "off",
            data_entity = EntityType.Branch.ToString(),
            data_first = Model.Code
        })
        <div class="required-icon iconPointer">
            <div class="text">*</div>
        </div>
    </div>
    <span class="col-lg-2 control-label clearSpan"></span>
    <span class="col-lg-6 validateCustom" id="CodeMessage"></span>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Name, "Nombre", new { @class = "col-lg-2 control-label" })
    <div class="col-md-6 input-group required-field-block">
        <span class="input-group-addon"><i class="fa fa-map-signs"></i></span>
        @Html.TextBoxFor(m => m.Name, new
        {
            @class = "form-control",
            data_role = "none",
            placeholder = "Nombre",
            id = "Name",
            name = "Name",
            maxlength = "70",
            Autocomplete = "off"
        })
        <div class="required-icon iconPointer">
            <div class="text">*</div>
        </div>
    </div>
    <span class="col-lg-2 control-label clearSpan"></span>
    <span class="col-lg-6 validateCustom" id="NameMessage"></span>
</div>

<div class="form-group selectize-container">
    @Html.LabelFor(m => m.RegionId, "Región", new { @class = "col-lg-2 control-label" })
    <div class="col-md-6 input-group required-field-block">
        <span class="input-group-addon"><i class="fa fa-globe"></i></span>
        @{ var regions = new List<SelectListItem> { new SelectListItem { Value = Model.Region.Id.ConvertToString(), Text = Model.Region.Name } }; }
        @Html.DropDownListFor(m => m.RegionId, regions, new
        {
            id = "RegionId",
            @class = "form-control",
            data_role = "none",
            data_entity = EntityType.Region
        })
        <div class="required-icon iconPointer">
            <div class="text">*</div>
        </div>
    </div>
    <span class="col-lg-2 control-label clearSpan"></span>
    <span class="col-lg-6 validateCustom" id="RegionIdMessage"></span>
</div>

<div class="form-group selectize-container">
    @Html.LabelFor(m => m.CompanyId, "Compañía", new { @class = "col-lg-2 control-label" })
    <div class="col-md-6 input-group required-field-block">
        <span class="input-group-addon"><i class="fa fa-building"></i></span>
        @{ var companies = new List<SelectListItem> { new SelectListItem { Value = Model.Company.Id.ConvertToString(), Text = Model.Company.Name } }; }
        @Html.DropDownListFor(m => m.CompanyId, companies, new
        {
            id = "CompanyId",
            @class = "form-control",
            data_role = "none",
            data_entity = EntityType.Company
        })
        <div class="required-icon iconPointer">
            <div class="text">*</div>
        </div>
    </div>
    <span class="col-lg-2 control-label clearSpan"></span>
    <span class="col-lg-6 validateCustom" id="CompanyIdMessage"></span>
</div>